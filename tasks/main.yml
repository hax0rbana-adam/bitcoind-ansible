---
- name: Bitcoind | Ensure dependencies are installed
  ansible.builtin.apt:
    update_cache: true
    name: "{{ item }}"
    state: present
  with_items:
    - gpg
    - dirmngr
  # We only need to install these dependencies if we
  # have the GPG keys to verify the SHA256SUMS file
  when: bitcoin_pgp_builders_pub_key is defined and bitcoin_pgp_builders_pub_key | length > 0

- name: Bitcoind | Ensure GPG base keyring directory is set as a fact for this OS
  ansible.builtin.set_fact:
    gpg_home_dir: /etc/apt/trusted.gpg.d

- name: "Bitcoind | Ensure group exists {{ bitcoin_group }}"
  ansible.builtin.group:
    name: "{{ bitcoin_group }}"
    state: present

- name: "Bitcoind | Ensure user user exists {{ bitcoin_user }}"
  ansible.builtin.user:
    name: "{{ bitcoin_user }}"
    group: "{{ bitcoin_group }}"
    state: present
    password: "*"

- name: "Bitcoind | Download SHA256SUMS for Bitcoin v{{ bitcoin_version }}"
  ansible.builtin.get_url:
    url: https://bitcoincore.org/bin/bitcoin-core-{{ bitcoin_version }}/SHA256SUMS
    dest: /tmp/SHA256SUMS
    http_agent: yourbtc-ansible
    mode: '600'

- name: Including gpg.yml task
  ansible.builtin.include_tasks: gpg.yml
  vars:
    gpg_user: "{{ item.name }}"
    gpg_id: "{{ item.id }}"
  with_items: "{{ bitcoin_pgp_builders_pub_key }}"
  when: bitcoin_pgp_builders_pub_key is defined and bitcoin_pgp_builders_pub_key | length > 0

- name: "Bitcoind | Download Bitcoin Core v{{ bitcoin_version }}"
  ansible.builtin.get_url:
    url: https://bitcoincore.org/bin/bitcoin-core-{{ bitcoin_version }}/bitcoin-{{ bitcoin_version }}-{{ bitcoin_arch }}.tar.gz
    dest: /tmp/bitcoin-core-{{ bitcoin_version }}-{{ bitcoin_arch }}.tar.gz
    checksum: sha256:https://bitcoincore.org/bin/bitcoin-core-{{ bitcoin_version }}/SHA256SUMS
    http_agent: yourbtc-ansible
    mode: '600'

- name: "Bitcoind | Ensure directory exists '/usr/local/bitcoin-core-{{ bitcoin_version }}"
  ansible.builtin.file:
    path: /usr/local/bitcoin-core-{{ bitcoin_version }}
    state: directory
    owner: "{{ bitcoin_user }}"
    group: "{{ bitcoin_group }}"
    mode: '755'

- name: "Bitcoind | Unpack .tar.gz into /usr/local/bitcoin-core-{{ bitcoin_version }}"
  ansible.builtin.unarchive:
    src: /tmp/bitcoin-core-{{ bitcoin_version }}-{{ bitcoin_arch }}.tar.gz
    dest: /usr/local/bitcoin-core-{{ bitcoin_version }}
    remote_src: true
    owner: "{{ bitcoin_user }}"
    group: "{{ bitcoin_group }}"
    extra_opts:
      - --strip-components=1

- name: "Bitcoind | Copy Bitcoin systemd .service file"
  ansible.builtin.template:
    src: bitcoind.service.j2
    dest: /lib/systemd/system/bitcoind-{{ bitcoin_network }}.service
    mode: '644'
  notify:
    - Bitcoind | Ensure bitcoind systemd unit is restarted

- name: "Bitcoind | Ensure Bitcoin configuration directory exists /etc/bitcoin/{{ bitcoin_network }}"
  ansible.builtin.file:
    path: /etc/bitcoin/{{ bitcoin_network }}
    state: directory
    owner: "{{ bitcoin_user }}"
    group: "{{ bitcoin_group }}"
    mode: '750'

- name: "Bitcoind | Copy bitcoin.conf file into /etc/bitcoin/{{ bitcoin_network }}"
  ansible.builtin.template:
    src: bitcoin.conf.j2
    dest: /etc/bitcoin/{{ bitcoin_network }}/bitcoin.conf
    owner: "{{ bitcoin_user }}"
    group: "{{ bitcoin_group }}"
    mode: '640'
  notify:
    - Bitcoind | Ensure bitcoind systemd unit is restarted

- name: "Bitcoind | Ensure Bitcoin data directory exists {{ bitcoin_data_dir }}"
  ansible.builtin.file:
    path: "{{ bitcoin_data_dir }}"
    state: directory
    mode: '750'

- name: "Bitcoind | Ensure Bitcoin data directory has correct permissions: {{ bitcoin_data_dir }}"
  ansible.builtin.file:
    path: "{{ bitcoin_data_dir }}"
    state: directory
    owner: "{{ bitcoin_user }}"
    group: "{{ bitcoin_group }}"
    mode: '750'

- name: "Bitcoind | Ensure symbolic link exists /etc/bitcoin/{{ bitcoin_network }}"
  ansible.builtin.file:
    src: /etc/bitcoin/{{ bitcoin_network }}
    dest: /home/{{ bitcoin_user }}/.bitcoin
    state: link
    owner: "{{ bitcoin_user }}"
    group: "{{ bitcoin_group }}"

- name: "Bitcoind | Ensure systemd unit is enabled and started"
  ansible.builtin.systemd:
    name: bitcoind-{{ bitcoin_network }}.service
    daemon_reload: true
    enabled: true
    state: started
